name: On Pull Request

on: [pull_request]

jobs:

  lint-commit:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v1
        with:
          configFile: './.commitlintrc.yml'
          firstParent: false
          failOnWarnings: true

  lint-code:
    needs: lint-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: ðŸ”¨ Use .NET Core 2.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.x'
      - name: ðŸ”¨ Use .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      # See https://github.com/actions/setup-dotnet/issues/25#issuecomment-646925506
      - name: ðŸª“ **DOTNET HACK** ðŸª“
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }
      - name: Restore tools
        run: dotnet tool install --tool-manifest ./.config/dotnet-tools.json dotnet-fsharplint
      - name: Run F# Linter
        run: dotnet fsharplint lint --lint-config fsharplint.json MessingUp.sln

  run-test:
    needs: [lint-commit, lint-code]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the docker-compose stack
        run: docker-compose --file "./MessingUp.Tests/docker-compose.yml" up --detach
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.201
      - name: Run Tests
        run: dotnet test
